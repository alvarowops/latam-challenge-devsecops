name: CI/CD Pipeline para Cloud Run Deployment Data

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Construir Imagen Docker
    runs-on: ubuntu-latest

    steps:
      - name: Revisar repositorio
        uses: actions/checkout@v2

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Iniciar sesión en Google Artifact Registry
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" | docker login -u _json_key --password-stdin https://us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}

      - name: Construir y publicar imagen Docker
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/amd64 -t us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-devsecops-images/data-api:$IMAGE_TAG -f Flask-api/Dockerfile --push Flask-api

  deploy:
    name: Desplegar en Cloud Run
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Revisar repositorio
        uses: actions/checkout@v2

      - name: Configurar Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Autenticarse con Google Cloud
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" | gcloud auth activate-service-account --key-file=-
          gcloud auth list
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Desplegar en Cloud Run
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          gcloud run deploy data-api \
            --image us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-devsecops-images/data-api:$IMAGE_TAG \
            --region us-east4 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
          CLOUD_RUN_URL=$(gcloud run services describe data-api --region us-east4 --format 'value(status.url)')
          echo "CLOUD_RUN_URL=$CLOUD_RUN_URL" >> $GITHUB_ENV

  test:
    name: Ejecutar pruebas de integración y funcionales
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Ejecutar prueba de integración
        env:
          CLOUD_RUN_URL: ${{ env.CLOUD_RUN_URL }}
        run: |
          for i in {1..5}; do
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$CLOUD_RUN_URL/data")
            if [ "$RESPONSE" -eq 200 ]; then
              echo "Prueba de integración pasada: La API devolvió HTTP 200"
              exit 0
            fi
            echo "Prueba de integración fallida: La API no devolvió HTTP 200. Reintentando en 5 segundos..."
            sleep 5
          done
          echo "Prueba de integración fallida después de 5 intentos"
          exit 1

      - name: Ejecutar prueba funcional de integridad de datos
        env:
          CLOUD_RUN_URL: ${{ env.CLOUD_RUN_URL }}
        run: |
          RESPONSE=$(curl -s "$CLOUD_RUN_URL/data")
          if [[ "$RESPONSE" != *"id":123* ]]; then
            echo "Prueba funcional fallida: Los datos esperados no se encontraron en la respuesta"
            exit 1
          fi
          echo "Prueba funcional pasada: Los datos esperados se encontraron en la respuesta"

      - name: Publicar mensaje en Pub/Sub y verificar ingreso
        env:
          CLOUD_RUN_URL: ${{ env.CLOUD_RUN_URL }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud pubsub topics publish data-ingest-topic --message '{"id":456,"name":"nuevo"}'
          sleep 10
          RESPONSE=$(curl -s "$CLOUD_RUN_URL/data")
          if [[ "$RESPONSE" != *'"id":456'* ]]; then
            echo "Prueba de integración fallida: El mensaje no fue ingresado correctamente a la base de datos"
            exit 1
          fi
          echo "Prueba de integración pasada: El mensaje fue ingresado y se refleja en la API"

  unit_tests:
    name: Ejecutar pruebas unitarias
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Revisar repositorio
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Instalar dependencias
        run: |
          pip install -r Flask-api/requirements.txt

      - name: Ejecutar pruebas unitarias
        run: |
          pytest Flask-api/tests/